{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig.json to read more about this file */

    /* Bundler mode */
    "moduleResolution": "bundler",                  /* Specify module resolution strategy: 'classic', 'node10/node', 'node16', 'nodenext', 'bundler' */
    "resolveJsonModule": true,                      /* Allows importing modules with a .json extension */
    "noEmit": true,                                 /* Do not emit compiler output files like JavaScript source code, source-maps or declarations */
    // "allowImportingTsExtensions": true,          /* Allows TS files to import each other with a TS-specific extension like .ts, .mts, or .tsx */
    // "isolatedModules": true,                     /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
    // "moduleDetection": "force",                  /* Controls how TypeScript determines whether a file is a script or a module: 'legacy', 'auto', 'force' */

    /* Basic Options */
    "module": "ESNext",                             /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    // "target": "ESNEXT",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', or 'ESNEXT'. */
    // "useDefineForClassFields": true,             /* Switches to the upcoming ECMA runtime behavior for class fields */
    // "lib": ["ES2020", "DOM", "DOM.Iterable"],    /* Specify library files to be included in the compilation. */

    /* Strict Type-Checking Options */
    "strict": true,                                 /* Enable all strict type-checking options. */
    "noImplicitAny": true,                          /* Raise error on expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true,                       /* Enable strict null checks. */
    "strictFunctionTypes": true,                    /* Enable strict checking of function types. */
    // "strictBindCallApply": true,                 /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    // "strictPropertyInitialization": true,        /* Enable strict checking of property initialization in classes. */
    // "noImplicitThis": true,                      /* Raise error on 'this' expressions with an implied 'any' type. */
    // "alwaysStrict": true,                        /* Parse in strict mode and emit "use strict" for each source file. */

    /* Additional Checks */
    "noImplicitReturns": true,                      /* Report error when not all code paths in function return a value. */
    "noFallthroughCasesInSwitch": true,             /* Report errors for fallthrough cases in switch statement. */
    // "noUnusedLocals": true,                      /* Report errors on unused locals. */
    // "noUnusedParameters": true,                  /* Report errors on unused parameters. */
    // "noUncheckedIndexedAccess": true,            /* Include 'undefined' in index signature results */
    // "noImplicitOverride": true,                  /* Ensure overriding members in derived classes are marked with an 'override' modifier. */
    // "noPropertyAccessFromIndexSignature": true,  /* Require undeclared properties from index signatures to use element accesses. */

    /* Advanced Options */
    "skipLibCheck": true,                           /* Skip type checking of declaration files. */
    "forceConsistentCasingInFileNames": true        /* Disallow inconsistently-cased references to the same file. */
  },
  "include": ["src", "tests"]
}
